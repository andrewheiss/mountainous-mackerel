---
title: "H<sub>1</sub>: Derogations and human rights"
format:
  html:
    code-fold: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.align = "center", fig.retina = 3,
                      fig.width = 6, fig.height = (6 * 0.618),
                      out.width = "80%", collapse = TRUE,
                      dev = "png", dev.args = list(type = "cairo-png"))

options(digits = 3, width = 120,
        dplyr.summarise.inform = FALSE,
        knitr.kable.NA = "")
```

```{r load-libraries, warning=FALSE, message=FALSE}
library(tidyverse)
library(targets)
library(broom)
library(modelsummary)
library(kableExtra)
library(ordinal)
library(brms)
library(marginaleffects)
library(tidybayes)
library(ggdist)
library(bayesplot)
library(patchwork)
library(scales)

# Bayes stuff
BAYES_SEED <- 1234
options(mc.cores = 4,
        brms.backend = "cmdstanr")

# Generated via random.org
set.seed(2385)

# Load targets 
withr::with_dir(here::here(), {
  # Final data
  tar_load(daily_panel)
  tar_load(weekly_panel)
  tar_load(year_week_lookup)
  
  # Models
  tar_load(m_h1)
  tar_load(m_coef_gof)
  
  # Plotting functions
  invisible(list2env(tar_read(graphic_functions), .GlobalEnv))
})

# Tell bayesplot to use the Lakota palette for things like pp_check()
bayesplot::color_scheme_set(clrs[c(1, 2, 4, 5, 7, 8)])

weekly_panel <- weekly_panel %>% 
  mutate(across(c(new_cases, new_deaths, cumulative_cases, cumulative_deaths),
                list(z = ~as.numeric(scale(.)))))
```


# Model and priors

## Official formal model

$$
\begin{aligned}
\text{COVID policy}_{i, t} \sim&\ \operatorname{Bernoulli}(\pi_{i, t}) \\
\operatorname{logit}(\pi_{i, t}) =&\ \alpha_{\text{region} [i]} + \beta_1\ \text{Derogation in effect}_{i}\ + \\
&\ \beta_2\ \text{New cases}_{i}\ + \beta_3\ \text{Cumulative cases}_{i}\ + \\
&\ \beta_4\ \text{New deaths}_{i}\ + \beta_5\ \text{Cumulative deaths}_{i}\ + \\
&\ \beta_6\ \text{Past ICCPR derogation}_{i}\ + \beta_7\ \text{Past ICCPR action}_{i}\ + \\
&\ \beta_8\ \text{Rule of law index}_{i}\ + \beta_9\ \text{Civil liberties index}_{i}\ + \\
&\ \beta_{10}\ \text{Core civil society index}_{i}\ + \beta_{11}\ \text{Week number}_{i} \\
\alpha_j \sim&\ \mathcal{N}(\bar{\alpha}, \sigma_\alpha) \text{, for } j \text{ in } 1 \dots J \\
\\
\bar{\alpha} \sim&\ \operatorname{Student t}(\nu = 1, \mu = 0, \sigma = 3) \\
\beta_{1 \dots 11} \sim&\ \operatorname{Student t}(\nu = 1, \mu = 0, \sigma = 3) \\
\sigma_a \sim&\ \operatorname{Cauchy}(x = 0, \gamma = 1) \text{, lower bound} = 0
\end{aligned}
$$

## Priors

```{r fig.width=6, fig.height=2.5}
p1 <- ggplot() +
  stat_function(geom = "area", 
                fun = ~extraDistr::dlst(., df = 1, mu = 0, sigma = 3), 
                fill = clrs[2]) +
  xlim(c(-20, 20)) +
  annotate(geom = "label", x = 0, y = 0.02, label = "Student t(1, 0, 3)") +
  labs(x = "α and βs") +
  theme_pandem(prior = TRUE)

p2 <- ggplot() +
  stat_function(geom = "area", 
                fun = ~dcauchy(., 0, 1), 
                fill = clrs[4]) +
  xlim(c(0, 10)) +
  annotate(geom = "label", x = 5, y = 0.063, label = "Cauchy(0, 1)") +
  labs(x = "σ") +
  theme_pandem(prior = TRUE)

p1 | p2
```


## Prior simulation

```{r}
#| code-fold: show
ologit_priors <- c(prior(student_t(1, 0, 3), class = Intercept),
                   prior(student_t(1, 0, 3), class = b),
                   prior(cauchy(0, 1), class = sd, lb = 0))

model_h1_prior_only <- brm(
  bf(pandem_nolimit ~ derogation_ineffect + 
       new_cases_z + cumulative_cases_z + 
       new_deaths_z + cumulative_deaths_z + 
       prior_iccpr_derogations + prior_iccpr_other_action +
       v2x_rule + v2x_civlib + v2xcs_ccsi +
       year_week_num + (1 | country_name)), 
  data = weekly_panel,
  family = "cumulative",
  prior = ologit_priors,
  sample_prior = "only",
  chains = 4, seed = BAYES_SEED, iter = 5000, refresh = 0,
  threads = threading(2)  # Two CPUs per chain to speed things up
)
model_h1_prior_only
```

```{r}
datagrid(model = model_h1_prior_only,
         year_week_num = 1:69,
         derogation_ineffect = 0:1) %>% 
  add_epred_draws(model_h1_prior_only, ndraws = 100) %>% 
  left_join(year_week_lookup, by = "year_week_num") %>% 
  mutate(derogation_ineffect = factor(derogation_ineffect, 
                                      levels = 0:1,
                                      labels = c("No", "Yes"),
                                      ordered = TRUE)) %>% 
  ggplot(aes(x = year_week_day, y = .epred, color = .category)) +
  geom_line(aes(group = paste(.draw, .category, derogation_ineffect)), alpha = 0.5, linewidth = 0.5) +
  scale_color_manual(values = c(clrs[c(2, 4, 6)])) +
  scale_x_date(date_breaks = "2 months", date_labels = "%b\n%Y") +
  scale_y_continuous(labels = label_percent()) +
  labs(x = NULL, y = "Predicted probability", 
       color = "Severity",
       title = "No Time Limit Measures (priors only)") +
  theme_pandem()
```


# Posterior

```{r tbl-h1, cache=TRUE, warning=FALSE}
modelsummary(pull(m_h1, model, name = nice),
             estimate = "{estimate}",
             statistic = "conf.int",
             fmt = 2, coef_map = m_coef_gof$coef_map, 
             gof_map = m_coef_gof$gof_map,
             metrics = c("none"))
```


# Model evaluation

```{r}
prelim_trace <- function(model) {
  model %>% 
    gather_draws(b_derogation_ineffect, b_year_week_num, b_v2xcs_ccsi, sd_who_region__Intercept) %>% 
    ggplot(aes(x = .iteration, y = .value, color = factor(.chain))) +
    geom_line(linewidth = 0.1) +
    scale_color_viridis_d(option = "rocket", end = 0.85) +
    labs(color = "Chain") +
    facet_wrap(vars(.variable), scales = "free_y") +
    theme_pandem()
}

prelim_trank <- function(model) {
  model %>% 
    gather_draws(b_derogation_ineffect, b_year_week_num, b_v2xcs_ccsi, sd_who_region__Intercept) %>% 
    group_by(.variable) %>% 
    mutate(draw_rank = rank(.value)) %>% 
    ggplot(aes(x = draw_rank, color = factor(.chain))) +
    stat_bin(geom = "step", binwidth = 200, position = position_identity(), boundary = 0) +
    scale_color_viridis_d(option = "rocket", end = 0.85) +
    labs(color = "Chain") +
    facet_wrap(vars(.variable), scales = "free_y") +
    theme_pandem()
}

prelim_pp <- function(model) {
  pp_check(model, ndraws = 100, type = "bars")
}
```

::: {.panel-tabset}

### `r m_h1$nice[[1]]`

```{r}
prelim_trace(m_h1$model[[1]])
```

```{r}
prelim_trank(m_h1$model[[1]])
```

```{r}
prelim_pp(m_h1$model[[1]])
```

### `r m_h1$nice[[2]]`

```{r}
prelim_trace(m_h1$model[[2]])
```

```{r}
prelim_trank(m_h1$model[[2]])
```

```{r}
prelim_pp(m_h1$model[[2]])
```

### `r m_h1$nice[[3]]`

```{r}
prelim_trace(m_h1$model[[3]])
```

```{r}
prelim_trank(m_h1$model[[3]])
```

```{r}
prelim_pp(m_h1$model[[3]])
```

### `r m_h1$nice[[4]]`

```{r}
prelim_trace(m_h1$model[[4]])
```

```{r}
prelim_trank(m_h1$model[[4]])
```

```{r}
prelim_pp(m_h1$model[[4]])
```

:::


# Interpretation and marginal effects

## Predictions

::: {.column-page-right}

```{r fig.width=13, fig.height=6, out.width="100%"}
h1_models_plots <- m_h1 %>% 
  mutate(pred_plot = pmap(list(model, nice, family), ~{
    if (..3 == "cumulative") {
      datagrid(model = ..1,
               year_week_num = 1:69,
               derogation_ineffect = 0:1) %>% 
        add_epred_draws(..1) %>% 
        left_join(year_week_lookup, by = "year_week_num") %>% 
        mutate(derogation_ineffect = factor(derogation_ineffect, 
                                            levels = 0:1,
                                            labels = c("No derogation", "Derogation in effect"),
                                            ordered = TRUE)) %>% 
        ggplot(aes(x = year_week_day, y = .epred, color = .category)) +
        stat_lineribbon(aes(fill = .category), alpha = 0.3) +
        scale_color_manual(values = c(clrs[c(2, 4, 6, 7)])) +
        scale_fill_manual(values = c(clrs[c(2, 4, 6, 7)])) +
        scale_x_date(date_breaks = "2 months", date_labels = "%b\n%Y") +
        scale_y_continuous(labels = label_percent()) +
        labs(x = NULL, y = "Predicted probability", 
             color = "Severity", fill = "Severity",
             title = ..2) +
        facet_wrap(vars(derogation_ineffect)) +
        theme_pandem()
    } else {
      datagrid(model = ..1,
               year_week_num = 1:69,
               derogation_ineffect = 0:1) %>% 
        add_epred_draws(..1) %>% 
        left_join(year_week_lookup, by = "year_week_num") %>% 
        mutate(derogation_ineffect = factor(derogation_ineffect, 
                                            levels = 0:1,
                                            labels = c("No", "Yes"),
                                            ordered = TRUE)) %>% 
        ggplot(aes(x = year_week_day, y = .epred, color = derogation_ineffect)) +
        stat_lineribbon(aes(fill = derogation_ineffect), alpha = 0.3) +
        scale_color_manual(values = c(clrs[1], clrs[8])) +
        scale_fill_manual(values = c(clrs[1], clrs[8])) +
        scale_x_date(date_breaks = "2 months", date_labels = "%b\n%Y") +
        scale_y_continuous(labels = label_percent()) +
        labs(x = NULL, y = "Predicted probability", 
             color = "Derogation in effect", fill = "Derogation in effect",
             title = ..2) +
        theme_pandem()
    }
  }))

wrap_plots(h1_models_plots$pred_plot)
```

:::

## Marginal effects

```{r}
# TODO: Figure out how to work with ordered logit marginal effects
```
